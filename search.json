[{"path":"https://xueweic.github.io/spacelink/articles/example_visium_human_DLPFC.html","id":"application-of-spacelink-to-visium-human-dlpfc-dataset","dir":"Articles","previous_headings":"","what":"Application of Spacelink to Visium Human DLPFC Dataset","title":"Example: Visium Human DLPFC","text":"vignette demonstrates perform spatial gene expression analysis using spacelink package Visium human dorsolateral prefrontal cortex (DLPFC) dataset. dataset available , used sample 151673. Cell-type proportions estimated using RCTD CosMx Human Frontal Cortex dataset reference. processed example data, saved Visium_human_DLPFC, includes gene expression, spot coordinates, estimated cell type proportions.","code":""},{"path":"https://xueweic.github.io/spacelink/articles/example_visium_human_DLPFC.html","id":"load-packages","dir":"Articles","previous_headings":"Application of Spacelink to Visium Human DLPFC Dataset","what":"Load packages","title":"Example: Visium Human DLPFC","text":"","code":"library(spacelink) library(Seurat) library(sctransform)"},{"path":"https://xueweic.github.io/spacelink/articles/example_visium_human_DLPFC.html","id":"load-example-dataset","dir":"Articles","previous_headings":"Application of Spacelink to Visium Human DLPFC Dataset","what":"Load example dataset","title":"Example: Visium Human DLPFC","text":"","code":"data(Visium_human_DLPFC) counts <- Visium_human_DLPFC$counts spatial_coords <- Visium_human_DLPFC$spatial_coords dim(counts) ## [1] 33538  3639 dim(spatial_coords) ## [1] 3639  2"},{"path":"https://xueweic.github.io/spacelink/articles/example_visium_human_DLPFC.html","id":"preprocessing","dir":"Articles","previous_headings":"Application of Spacelink to Visium Human DLPFC Dataset","what":"Preprocessing","title":"Example: Visium Human DLPFC","text":"","code":"# Filter mitochondrial and low-expressed genes counts <- counts[!grepl(\"(^MT-)|(^mt-)\", rownames(counts)),] counts <- counts[rowSums(counts >= 3) >= ncol(counts)*0.005,] dim(counts) ## [1] 3309  3639 # Normalize expression counts using sctransform package seurat_obj <- CreateSeuratObject(counts = counts) seurat_norm = SCTransform(seurat_obj, vst.flavor = \"v2\", verbose = FALSE) counts <- seurat_norm@assays$SCT$data"},{"path":"https://xueweic.github.io/spacelink/articles/example_visium_human_DLPFC.html","id":"run-global-spacelink","dir":"Articles","previous_headings":"Application of Spacelink to Visium Human DLPFC Dataset","what":"Run global Spacelink","title":"Example: Visium Human DLPFC","text":"","code":"# In this example, we use only the first five genes. global_results <- spacelink_global(normalized_counts = counts[1:5,],                                    spatial_coords = spatial_coords)"},{"path":"https://xueweic.github.io/spacelink/articles/example_visium_human_DLPFC.html","id":"interpret-results","dir":"Articles","previous_headings":"Application of Spacelink to Visium Human DLPFC Dataset > Run global Spacelink","what":"Interpret results","title":"Example: Visium Human DLPFC","text":"result data frame p-value, ESV, relevant values gene. important columns pval : combined p-values statistical significance spatial patterns. padj : Benjamini-Hochberg adjusted p-values. ESV : Effective Spatial Variability. Spatial pattern stronger ESV closer 1. tau.sq : Non-spatial (nugget) variance. sigma.sq1, sigma.sq2, … : Spatial variance different length scales. phi1, phi2, … : Inverse gene-specific length scales.","code":""},{"path":"https://xueweic.github.io/spacelink/articles/example_visium_human_DLPFC.html","id":"run-cell-type-specific-spacelink","dir":"Articles","previous_headings":"Application of Spacelink to Visium Human DLPFC Dataset","what":"Run cell-type-specific Spacelink","title":"Example: Visium Human DLPFC","text":"","code":"# Load cell type proportions cell_type_proportions <- Visium_human_DLPFC$cell_type_proportions dim(cell_type_proportions) ## [1] 3639  9 colnames(cell_type_proportions) ## [1] \"endothelial\"  \"L2_3\"  \"L4\"  \"L6\"  \"oligodendrocyte\"   ## [6] \"OPC\"  \"astro\"  \"Inh\"  \"microglia\" # In this example, we examine the oligodendrocyte-specific spatial variability. cell_type_spacelink_results <-    spacelink_cell_type(normalized_counts = counts[1:5,],                        spatial_coords = spatial_coords,                        cell_type_proportions = cell_type_proportions,                        focal_cell_type = \"oligodendrocyte\",                       global_spacelink_results = global_results,                        # The above is not required, though providing global results can slightly improve efficiency.                       calculate_ESV = TRUE)"},{"path":"https://xueweic.github.io/spacelink/articles/example_visium_human_DLPFC.html","id":"interpret-results-1","dir":"Articles","previous_headings":"Application of Spacelink to Visium Human DLPFC Dataset > Run cell-type-specific Spacelink","what":"Interpret results","title":"Example: Visium Human DLPFC","text":"result data frame p-value ct-ESV gene. pval : combined p-values statistical significance cell-type-specific spatial patterns. ESV : Cell-type-specific Effective Spatial Variability (ct-ESV).","code":""},{"path":"https://xueweic.github.io/spacelink/articles/getting-started.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting Started with Spacelink","text":"Install development version GitHub:","code":"# install.packages(\"devtools\") devtools::install_github(\"xueweic/spacelink\") library(spacelink)"},{"path":"https://xueweic.github.io/spacelink/articles/getting-started.html","id":"basic-workflow","dir":"Articles","previous_headings":"","what":"Basic Workflow","title":"Getting Started with Spacelink","text":"typical analysis workflow involves two main steps:","code":""},{"path":"https://xueweic.github.io/spacelink/articles/getting-started.html","id":"global-analysis","dir":"Articles","previous_headings":"Basic Workflow","what":"1. Global Analysis","title":"Getting Started with Spacelink","text":"Start global analysis identify spatially variable genes: results include: pval : Combined p-value spatial significance padj : Benjamini-Hochberg adjusted p-values ESV : Effective Spatial Variability score (0-1) tau.sq : Nugget variance component sigma.sq1, sigma.sq2, … : Spatial variance components kernel phi1, phi2, … : Inverse gene-specific length scales","code":"# Run global spatial variability analysis global_results <- spacelink_global(   normalized_counts = normalized_expression_matrix,  # Genes × Spots   spatial_coords = coordinates,  # Spots × 2 (x,y coordinates)   n_lengthscales = 5  # Number of spatial bandwidths )  # View results head(global_results[order(global_results$ESV, decreasing=T), ])"},{"path":"https://xueweic.github.io/spacelink/articles/getting-started.html","id":"cell-type-specific-analysis","dir":"Articles","previous_headings":"Basic Workflow","what":"2. Cell-Type-Specific Analysis","title":"Getting Started with Spacelink","text":"cell type proportion information, analyze cell-type-specific spatial patterns: results include: pval : Combined p-value spatial significance ESV : Cell-type-specific Effective Spatial Variability (ct-ESV) score (0-1)","code":"# Cell-type-specific analysis cell_type_results <- spacelink_cell_type(   normalized_counts = normalized_expression_matrix,  # Genes × Spots   spatial_coords = coordinates,  # Spots × 2 (x,y coordinates)   cell_type_proportions = cell_type_proportions,  # Spots × Cell-types   focal_cell_type = cell_type_name,  # Cell type name to test   global_spacelink_results = global_results,  # Not necessary. Providing global results improves efficiency.   calculate_ESV = TRUE )"},{"path":"https://xueweic.github.io/spacelink/articles/getting-started.html","id":"example-with-simulated-data","dir":"Articles","previous_headings":"","what":"Example with Simulated Data","title":"Getting Started with Spacelink","text":"’s example global Spacelink analysis using simulated data:","code":"# Set up simulated data set.seed(123) n_spots <- 200 n_genes <- 100  # Generate spatial coordinates (2D grid) coords <- expand.grid(   x = seq(0, 10, length.out = sqrt(n_spots)),   y = seq(0, 10, length.out = sqrt(n_spots)) )  # Generate expression data with spatial patterns expr_data <- matrix(rnorm(n_genes * n_spots), nrow = n_genes) rownames(expr_data) <- paste0(\"Gene_\", 1:n_genes)  # Add spatial pattern to some genes for(i in 1:10) {   # Create distance-based pattern   center_x <- runif(1, 2, 8)   center_y <- runif(1, 2, 8)   distances <- sqrt((coords$x - center_x)^2 + (coords$y - center_y)^2)   spatial_effect <- exp(-distances/2)   expr_data[i, ] <- expr_data[i, ] + 2 * spatial_effect }  # Run analysis results <- spacelink_global(   normalized_counts = expr_data,   spatial_coords = as.matrix(coords),   n_lengthscales = 5 )  # View top spatially variable genes top_genes <- head(results[order(results$ESV, decreasing=TRUE), ], 10) print(top_genes[, c(\"ESV\", \"pval\", \"padj\")])"},{"path":"https://xueweic.github.io/spacelink/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hanbyul Lee. Maintainer, author, copyright holder. Haochen Sun. Author, copyright holder. Xuewei Cao. Author, copyright holder. Kushal Dey. Author, copyright holder.","code":""},{"path":"https://xueweic.github.io/spacelink/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lee H, Sun H, Cao X, Karaahmet B, Li Z, Ulrich-Klein H, Wang G, De Jager P, . Bennett D, Pinello L, Mazumder R, Dey K (2025). “Mapping disease critical spatially variable gene programs integrating spatial transcriptomics human genetics.” update later. Preprint, https://doi.org/10.1101/2025.04.17.25326042.","code":"@Article{lee_etall:2025,   title = {Mapping disease critical spatially variable gene programs by integrating spatial transcriptomics with human genetics},   author = {Hanybul Lee and Haochen Sun and Xuewei Cao and Berke Karaahmet and Zhijian Li and Hans Ulrich-Klein and Gao Wang and Philip {De Jager} and David {A. Bennett} and Luca Pinello and Rahul Mazumder and Kushal K. Dey},   year = {2025},   journal = {update later},   url = {https://doi.org/10.1101/2025.04.17.25326042},   note = {Preprint}, }"},{"path":"https://xueweic.github.io/spacelink/index.html","id":"spacelink","dir":"","previous_headings":"","what":"spacelink: Multi-Scale Spatial Gene Variability Analysis","title":"spacelink: Multi-Scale Spatial Gene Variability Analysis","text":"spacelink unified statistical framework detecting prioritizing SVGs global tissue cell-type resolution. Spacelink employs adaptive multi-kernel model capture spatial variance across diverse length scales, cell-type specific version introduces data-driven gating strategy correct spatial colocalization, designed improve specificity cell types weakly represented mixed spots relative abundant colocalizing cell types. summarize spatial variability, define Effective Spatial Variability (ESV), metric integrates variance magnitude component kernel corresponding spatial scale single interpretable score directly suited genetic analyses.","code":""},{"path":"https://xueweic.github.io/spacelink/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"spacelink: Multi-Scale Spatial Gene Variability Analysis","text":"can install development version spacelink GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"hanbyul-lee/spacelink\")"},{"path":"https://xueweic.github.io/spacelink/index.html","id":"tutorial","dir":"","previous_headings":"","what":"Tutorial","title":"spacelink: Multi-Scale Spatial Gene Variability Analysis","text":"detailed tutorial available .","code":""},{"path":"https://xueweic.github.io/spacelink/reference/Visium_human_DLPFC.html","id":null,"dir":"Reference","previous_headings":"","what":"Visium human DLPFC data — Visium_human_DLPFC","title":"Visium human DLPFC data — Visium_human_DLPFC","text":"example dataset","code":""},{"path":"https://xueweic.github.io/spacelink/reference/Visium_human_DLPFC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visium human DLPFC data — Visium_human_DLPFC","text":"","code":"Visium_human_DLPFC"},{"path":[]},{"path":"https://xueweic.github.io/spacelink/reference/Visium_human_DLPFC.html","id":"visium-human-dlpfc","dir":"Reference","previous_headings":"","what":"Visium_human_DLPFC","title":"Visium human DLPFC data — Visium_human_DLPFC","text":"list 3 elements counts Gene expression count matrix. Rows columns indicate genes spots, respectively. spatial_coords Spatial coordinates matrix. Rows indicate spots. cell_type_proportions Cell type proportion matrix estimated RCTD. Rows columns indicate spots cell types, respectively.","code":""},{"path":"https://xueweic.github.io/spacelink/reference/Visium_human_DLPFC.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Visium human DLPFC data — Visium_human_DLPFC","text":"Visium_human_DLPFC dataset contains","code":""},{"path":"https://xueweic.github.io/spacelink/reference/calculate_ESV.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Effective Spatial Variability — calculate_ESV","title":"Calculate Effective Spatial Variability — calculate_ESV","text":"Calculates Effective Spatial Variability (ESV) score based variance components spatial weights.","code":""},{"path":"https://xueweic.github.io/spacelink/reference/calculate_ESV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Effective Spatial Variability — calculate_ESV","text":"","code":"calculate_ESV(sigma.sq_vec, tau.sq, spatial_coords, phi_seq)"},{"path":"https://xueweic.github.io/spacelink/reference/calculate_ESV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Effective Spatial Variability — calculate_ESV","text":"sigma.sq_vec Vector spatial variance components. tau.sq Nugget variance component. spatial_coords Spatial coordinates matrix. phi_seq Sequence length-scale parameters.","code":""},{"path":"https://xueweic.github.io/spacelink/reference/calculate_ESV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Effective Spatial Variability — calculate_ESV","text":"Numeric value representing ESV score (0 1).","code":""},{"path":"https://xueweic.github.io/spacelink/reference/run_nnls.html","id":null,"dir":"Reference","previous_headings":"","what":"Non-Negative Least Squares for Spatial Kernels — run_nnls","title":"Non-Negative Least Squares for Spatial Kernels — run_nnls","text":"Performs non-negative least squares fitting spatial kernel regression.","code":""},{"path":"https://xueweic.github.io/spacelink/reference/run_nnls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Non-Negative Least Squares for Spatial Kernels — run_nnls","text":"","code":"run_nnls(   y,   spatial_coords,   phi_seq,   is.sparse = FALSE,   lambda = 0,   is.obj = FALSE )"},{"path":"https://xueweic.github.io/spacelink/reference/run_nnls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Non-Negative Least Squares for Spatial Kernels — run_nnls","text":"y Numeric vector gene expression values. spatial_coords Matrix spatial coordinates. phi_seq Numeric vector length-scale parameters. .sparse Logical indicating whether use sparse regularization. lambda Regularization parameter L1 constraint. .obj Logical indicating whether return objective function value.","code":""},{"path":"https://xueweic.github.io/spacelink/reference/run_nnls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Non-Negative Least Squares for Spatial Kernels — run_nnls","text":"Data frame variance components optional objective value.","code":""},{"path":"https://xueweic.github.io/spacelink/reference/score_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Score Test for Spatial Gene Expression — score_test","title":"Score Test for Spatial Gene Expression — score_test","text":"Performs score tests assess spatial gene expression patterns across multiple length scales.","code":""},{"path":"https://xueweic.github.io/spacelink/reference/score_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score Test for Spatial Gene Expression — score_test","text":"","code":"score_test(y, spatial_coords, phi_seq)"},{"path":"https://xueweic.github.io/spacelink/reference/score_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score Test for Spatial Gene Expression — score_test","text":"y Gene expression vector. spatial_coords Spatial coordinates matrix. phi_seq Sequence length-scale parameters.","code":""},{"path":"https://xueweic.github.io/spacelink/reference/score_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score Test for Spatial Gene Expression — score_test","text":"List containing p-values length scale.","code":""},{"path":"https://xueweic.github.io/spacelink/reference/select_lengthscales.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Optimal Length Scales for Spatial Analysis — select_lengthscales","title":"Select Optimal Length Scales for Spatial Analysis — select_lengthscales","text":"Automatically selects optimal length scales (kernel bandwidths) spatial gene expression analysis using two-step approach based non-negative least squares fitting.","code":""},{"path":"https://xueweic.github.io/spacelink/reference/select_lengthscales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Optimal Length Scales for Spatial Analysis — select_lengthscales","text":"","code":"select_lengthscales(   Y,   spatial_coords,   n_lengthscales = 5,   M = 1,   is.inverse = TRUE,   n_workers = 1 )"},{"path":"https://xueweic.github.io/spacelink/reference/select_lengthscales.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Optimal Length Scales for Spatial Analysis — select_lengthscales","text":"Y Normalized count matrix. Rows columns indicate genes spots, respectively. spatial_coords Spatial coordinates matrix. Rows indicate spots. n_lengthscales Number length-scales (.e., number kernels). Default 5. M Controls minimum length-scale. Minimum length-scale set minimum distance multiplied M. Default 1. .inverse inverse lengthscale (phi) returned? Default TRUE. n_workers Number workers parallelization. Default 1.","code":""},{"path":"https://xueweic.github.io/spacelink/reference/select_lengthscales.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Optimal Length Scales for Spatial Analysis — select_lengthscales","text":"list containing: phi_mat Matrix selected length scale parameters (phi = 1/lengthscale) gene. row corresponds gene. time Vector computation times gene.","code":""},{"path":"https://xueweic.github.io/spacelink/reference/select_lengthscales.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select Optimal Length Scales for Spatial Analysis — select_lengthscales","text":"function implements two-step approach selecting optimal length scales: First, fits models across broad range length scales , gene, identifies range variance components non-zero Finally, selects gene-specific length scales within ranges function uses run_nnls internally fit non-negative least squares models gene across different length scales.","code":""},{"path":[]},{"path":"https://xueweic.github.io/spacelink/reference/select_lengthscales.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select Optimal Length Scales for Spatial Analysis — select_lengthscales","text":"","code":"if (FALSE) { # \\dontrun{ # Generate example data set.seed(123) n_spots <- 100 n_genes <- 20 coords <- matrix(runif(n_spots * 2), ncol = 2) expr_data <- matrix(rnorm(n_genes * n_spots), nrow = n_genes)  # Select optimal length scales length_scales <- select_lengthscales(   Y = expr_data,   spatial_coords = coords,   n_lengthscales = 5 )  # View selected scales for first few genes head(length_scales$phi_mat) } # }"},{"path":"https://xueweic.github.io/spacelink/reference/spacelink_cell_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Cell Type-Specific Spatial Variability Analysis — spacelink_cell_type","title":"Cell Type-Specific Spatial Variability Analysis — spacelink_cell_type","text":"Performs cell type-specific spatial gene variability analysis","code":""},{"path":"https://xueweic.github.io/spacelink/reference/spacelink_cell_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cell Type-Specific Spatial Variability Analysis — spacelink_cell_type","text":"","code":"spacelink_cell_type(   normalized_counts,   spatial_coords,   cell_type_proportions,   focal_cell_type,   covariates = NULL,   global_spacelink_results = NULL,   lengthscales = NULL,   n_lengthscales = 5,   M = 1,   calculate_ESV = TRUE,   c1 = 0.25,   c2 = 0.2,   n_workers = 1 )"},{"path":"https://xueweic.github.io/spacelink/reference/spacelink_cell_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cell Type-Specific Spatial Variability Analysis — spacelink_cell_type","text":"normalized_counts Normalized count matrix. Rows columns indicate genes spots, respectively. spatial_coords Spatial coordinates matrix. Rows indicate spots. cell_type_proportions Cell type proportion matrix (e.g., estimated RCTD). focal_cell_type Name cell-type tested. covariates Spatial features (without intercept) global_spacelink_results Spacelink global SVG test results spacelink_global. lengthscales NULL, length-scales calculated using two-step approach. n_lengthscales Number length-scales (.e., number kernels) M controls minimum length-scale. Minimum length-scale set minimum distance multiplied M. calculate_ESV TRUE, ct-ESV returned. c1 Gating parameter 1. Default 0.25. c2 Gating parameter 2. Default 0.2. n_workers Number workers parallelization. Default 1.","code":""},{"path":"https://xueweic.github.io/spacelink/reference/spacelink_cell_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cell Type-Specific Spatial Variability Analysis — spacelink_cell_type","text":"data frame containing: time Computation time pval Combined p-value cell type-specific spatial patterns ESV ct-ESV cell type-specific spatial patterns","code":""},{"path":"https://xueweic.github.io/spacelink/reference/spacelink_cell_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cell Type-Specific Spatial Variability Analysis — spacelink_cell_type","text":"","code":"data(Visium_human_DLPFC) counts <- Visium_human_DLPFC$counts spatial_coords <- Visium_human_DLPFC$spatial_coords # Filter mitochondrial and low-expressed genes counts <- counts[!grepl(\"(^MT-)|(^mt-)\", rownames(counts)),] counts <- counts[rowSums(counts >= 3) >= ncol(counts)*0.005,] #> Error in h(simpleError(msg, call)): error in evaluating the argument 'i' in selecting a method for function '[': 'x' must be an array of at least two dimensions # Normalize expression counts using sctransform package library(Seurat) #> Error in library(Seurat): there is no package called ‘Seurat’ library(sctransform) #> Error in library(sctransform): there is no package called ‘sctransform’ seurat_obj <- CreateSeuratObject(counts = counts) #> Error in CreateSeuratObject(counts = counts): could not find function \"CreateSeuratObject\" seurat_norm = SCTransform(seurat_obj, vst.flavor = \"v2\", verbose = FALSE) #> Error in SCTransform(seurat_obj, vst.flavor = \"v2\", verbose = FALSE): could not find function \"SCTransform\" counts <- seurat_norm@assays$SCT$data #> Error: object 'seurat_norm' not found cell_type_proportions <- Visium_human_DLPFC$cell_type_proportions cell_type_spacelink_results <- spacelink_cell_type(   normalized_counts = counts[1:5,],   spatial_coords = spatial_coords,   cell_type_proportions = cell_type_proportions,   focal_cell_type = \"oligodendrocyte\",   calculate_ESV = TRUE ) #> Error in rowMeans(Y): 'x' must be an array of at least two dimensions"},{"path":"https://xueweic.github.io/spacelink/reference/spacelink_global.html","id":null,"dir":"Reference","previous_headings":"","what":"Global Spatial Variability Analysis — spacelink_global","title":"Global Spatial Variability Analysis — spacelink_global","text":"Performs global spatial gene variability analysis across multiple length scales using kernel-based methods.","code":""},{"path":"https://xueweic.github.io/spacelink/reference/spacelink_global.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global Spatial Variability Analysis — spacelink_global","text":"","code":"spacelink_global(   normalized_counts,   spatial_coords,   covariates = NULL,   lengthscales = NULL,   n_lengthscales = 5,   M = 1,   n_workers = 1 )"},{"path":"https://xueweic.github.io/spacelink/reference/spacelink_global.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Global Spatial Variability Analysis — spacelink_global","text":"normalized_counts Normalized count matrix. Rows columns indicate genes spots, respectively. spatial_coords Spatial coordinates matrix. Rows indicate spots. covariates Spatial features (without intercept). Rows indicate spots. lengthscales NULL, length-scales calculated using two-step approach. n_lengthscales Number length-scales (.e., number kernels). Default 5. M Controls minimum length-scale. Minimum length-scale set minimum distance multiplied M. Default 1. n_workers Number workers parallelization. Default 1.","code":""},{"path":"https://xueweic.github.io/spacelink/reference/spacelink_global.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Global Spatial Variability Analysis — spacelink_global","text":"data frame containing: tau.sq Nugget variance component sigma.sq1, sigma.sq2, ... Spatial variance components kernel raw_ESV Effective Spatial Variability score pval Combined p-value score tests padj Benjamini-Hochberg adjusted p-values ESV ESV adjusted multiple testing (0 padj > 0.05)","code":""},{"path":"https://xueweic.github.io/spacelink/reference/spacelink_global.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Global Spatial Variability Analysis — spacelink_global","text":"","code":"data(Visium_human_DLPFC) counts <- Visium_human_DLPFC$counts spatial_coords <- Visium_human_DLPFC$spatial_coords # Filter mitochondrial and low-expressed genes counts <- counts[!grepl(\"(^MT-)|(^mt-)\", rownames(counts)),] counts <- counts[rowSums(counts >= 3) >= ncol(counts)*0.005,] #> Error in h(simpleError(msg, call)): error in evaluating the argument 'i' in selecting a method for function '[': 'x' must be an array of at least two dimensions # Normalize expression counts using sctransform package library(Seurat) #> Error in library(Seurat): there is no package called ‘Seurat’ library(sctransform) #> Error in library(sctransform): there is no package called ‘sctransform’ seurat_obj <- CreateSeuratObject(counts = counts) #> Error in CreateSeuratObject(counts = counts): could not find function \"CreateSeuratObject\" seurat_norm = SCTransform(seurat_obj, vst.flavor = \"v2\", verbose = FALSE) #> Error in SCTransform(seurat_obj, vst.flavor = \"v2\", verbose = FALSE): could not find function \"SCTransform\" counts <- seurat_norm@assays$SCT$data #> Error: object 'seurat_norm' not found global_results <- spacelink_global(normalized_counts = counts[1:5,], spatial_coords = spatial_coords) #> Error in rowMeans(Y): 'x' must be an array of at least two dimensions"},{"path":"https://xueweic.github.io/spacelink/news/index.html","id":"spacelink-development-version","dir":"Changelog","previous_headings":"","what":"spacelink (development version)","title":"spacelink (development version)","text":"Initial GitHub release.","code":""}]
