% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spacelink_global.R
\name{spacelink_global}
\alias{spacelink_global}
\title{Global Spatial Variability Analysis}
\usage{
spacelink_global(
  normalized_counts,
  spatial_coords,
  covariates = NULL,
  lengthscales = NULL,
  n_lengthscales = 5,
  M = 1,
  n_workers = 1
)
}
\arguments{
\item{normalized_counts}{Normalized count matrix. Rows and columns indicate genes and spots, respectively.}

\item{spatial_coords}{Spatial coordinates matrix. Rows indicate spots.}

\item{covariates}{Spatial features (without intercept). Rows indicate spots.}

\item{lengthscales}{If NULL, length-scales are calculated using the two-step approach.}

\item{n_lengthscales}{Number of length-scales (i.e., number of kernels). Default is 5.}

\item{M}{Controls the minimum length-scale. Minimum length-scale is set to be the minimum distance multiplied by M. Default is 1.}

\item{n_workers}{Number of workers for parallelization. Default is 1.}
}
\value{
A data frame containing:
\describe{
\item{tau.sq}{Nugget variance component}
\item{sigma.sq1, sigma.sq2, ...}{Spatial variance components for each kernel}
\item{raw_ESV}{Effective Spatial Variability score}
\item{pval}{Combined p-value from score tests}
\item{padj}{Benjamini-Hochberg adjusted p-values}
\item{ESV}{ESV adjusted for multiple testing (0 if padj > 0.05)}
}
}
\description{
Performs global spatial gene variability analysis across multiple length scales
using kernel-based methods.
}
\examples{
# Set up simulated data
library(spacelink)
set.seed(123)
n_spots <- 100
n_genes <- 10

# Generate spatial coordinates (2D grid)
coords <- expand.grid(
  x = seq(0, 10, length.out = sqrt(n_spots)),
  y = seq(0, 10, length.out = sqrt(n_spots))
)

# Simulate (normalized) expression data with spatial autocorrelation
expr_data <- matrix(nrow=n_genes, ncol=n_spots)
rownames(expr_data) <- paste0("Gene_", 1:n_genes)
D <- as.matrix(dist(coords))
K <- exp(-D); chol_K <- chol(K)
for(i in 1:(n_genes/2)){
  expr_data[i,] <- matrix(rnorm(n_spots, 0, 1), nrow=1, ncol=n_spots)
  expr_data[i,] <- expr_data[i,] + i*matrix(rnorm(n_spots, 0, 1), 1, n_spots)\%*\%chol_K
}
# Simulate (normalized) expression data without spatial autocorrelation
for(i in (n_genes/2+1):n_genes){
  expr_data[i,] <- i*matrix(rnorm(n_spots, 0, 1), nrow=1, ncol=n_spots)
}

global_results <- spacelink_global(normalized_counts = expr_data, spatial_coords = coords)
print(global_results[, c("raw_ESV", "pval", "ESV", "padj")])

}
