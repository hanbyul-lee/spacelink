% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spacelink_cell_type.R
\name{spacelink_cell_type}
\alias{spacelink_cell_type}
\title{Cell Type-Specific Spatial Variability Analysis}
\usage{
spacelink_cell_type(
  normalized_counts,
  spatial_coords,
  cell_type_proportions,
  focal_cell_type,
  covariates = NULL,
  global_spacelink_results = NULL,
  lengthscales = NULL,
  n_lengthscales = 5,
  M = 1,
  calculate_ESV = TRUE,
  c1 = 0.25,
  c2 = 0.2,
  n_workers = 1
)
}
\arguments{
\item{normalized_counts}{Normalized count matrix. Rows and columns indicate genes and spots, respectively.}

\item{spatial_coords}{Spatial coordinates matrix. Rows indicate spots.}

\item{cell_type_proportions}{Cell type proportion matrix (e.g., estimated by RCTD).}

\item{focal_cell_type}{Name of cell-type to be tested.}

\item{covariates}{Spatial features (without intercept)}

\item{global_spacelink_results}{Spacelink global SVG test results from \code{\link{spacelink_global}}.}

\item{lengthscales}{If NULL, length-scales are calculated by using our two-step approach.}

\item{n_lengthscales}{Number of length-scales (i.e., number of kernels)}

\item{M}{It controls the minimum length-scale. Minimum length-scale is set to be the minimum distance multiplied by M.}

\item{calculate_ESV}{If TRUE, ct-ESV is returned.}

\item{c1}{Gating parameter 1. Default is 0.25.}

\item{c2}{Gating parameter 2. Default is 0.2.}

\item{n_workers}{Number of workers for parallelization. Default is 1.}
}
\value{
A data frame containing:
\describe{
\item{time}{Computation time}
\item{pval}{Combined p-value for cell type-specific spatial patterns}
\item{ESV}{ct-ESV for cell type-specific spatial patterns}
}
}
\description{
Performs cell type-specific spatial gene variability analysis
}
\examples{
data(Visium_human_DLPFC)
counts <- Visium_human_DLPFC$counts
spatial_coords <- Visium_human_DLPFC$spatial_coords
# Filter mitochondrial and low-expressed genes
counts <- counts[!grepl("(^MT-)|(^mt-)", rownames(counts)),]
counts <- counts[rowSums(counts >= 3) >= ncol(counts)*0.005,]
# Normalize expression counts using sctransform package
library(Seurat)
library(sctransform)
seurat_obj <- CreateSeuratObject(counts = counts)
seurat_norm = SCTransform(seurat_obj, vst.flavor = "v2", verbose = FALSE)
counts <- seurat_norm@assays$SCT$data
cell_type_proportions <- Visium_human_DLPFC$cell_type_proportions
cell_type_spacelink_results <- spacelink_cell_type(
  normalized_counts = counts[1:5,],
  spatial_coords = spatial_coords,
  cell_type_proportions = cell_type_proportions,
  focal_cell_type = "oligodendrocyte",
  calculate_ESV = TRUE
)

}
