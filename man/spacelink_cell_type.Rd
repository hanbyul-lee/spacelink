% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spacelink_cell_type.R
\name{spacelink_cell_type}
\alias{spacelink_cell_type}
\title{Cell Type-Specific Spatial Variability Analysis}
\usage{
spacelink_cell_type(
  normalized_counts,
  spatial_coords,
  cell_type_proportions,
  focal_cell_type,
  covariates = NULL,
  global_spacelink_results = NULL,
  lengthscales = NULL,
  n_lengthscales = 5,
  M = 1,
  calculate_ESV = TRUE,
  c1 = 0.25,
  c2 = 0.2,
  n_workers = 1
)
}
\arguments{
\item{normalized_counts}{Normalized count matrix. Rows and columns indicate genes and spots, respectively.}

\item{spatial_coords}{Spatial coordinates matrix. Rows indicate spots.}

\item{cell_type_proportions}{Cell type proportion matrix (e.g., estimated by RCTD).}

\item{focal_cell_type}{Name of cell-type to be tested.}

\item{covariates}{Spatial features (without intercept)}

\item{global_spacelink_results}{Spacelink global SVG test results from \code{\link{spacelink_global}}.}

\item{lengthscales}{If NULL, length-scales are calculated by using our two-step approach.}

\item{n_lengthscales}{Number of length-scales (i.e., number of kernels)}

\item{M}{It controls the minimum length-scale. Minimum length-scale is set to be the minimum distance multiplied by M.}

\item{calculate_ESV}{If TRUE, ct-ESV is returned.}

\item{c1}{Gating parameter 1. Default is 0.25.}

\item{c2}{Gating parameter 2. Default is 0.2.}

\item{n_workers}{Number of workers for parallelization. Default is 1.}
}
\value{
A data frame containing:
\describe{
\item{time}{Computation time}
\item{pval}{Combined p-value for cell type-specific spatial patterns}
\item{ESV}{ct-ESV for cell type-specific spatial patterns}
}
}
\description{
Performs cell type-specific spatial gene variability analysis
}
\examples{
library(spacelink)
# Set up simulated data
set.seed(123)
n_spots <- 100
n_genes <- 10
n_cell_types <- 2

# Generate spatial coordinates (2D grid)
coords <- expand.grid(
  x = seq(0, 10, length.out = sqrt(n_spots)),
  y = seq(0, 10, length.out = sqrt(n_spots))
)

# Generate cell type proportions for 2 cell types
cell_type_props <- matrix(nrow = n_spots, ncol = n_cell_types)
cell_type_props[1:(n_spots/2),1] <- runif(n_spots/2,0,0.5)
cell_type_props[(n_spots/2+1):n_spots,1] <- runif(n_spots/2,0.5,1)
cell_type_props[,2] <- 1-cell_type_props[,1]
colnames(cell_type_props) <- paste0("Cell_type_", 1:n_cell_types)

# Simulate (normalized) expression data with spatial autocorrelation for cell type 1
expr_data <- matrix(nrow=n_genes, ncol=n_spots)
rownames(expr_data) <- paste0("Gene_", 1:n_genes)
D <- as.matrix(dist(coords))
K <- exp(-D)
Sigma <- chol(K)\%*\%diag(cell_type_props[,'Cell_type_1'])
for(i in 1:(n_genes/2)){
  expr_data[i,] <- matrix(rnorm(n_spots, 0, 1), nrow=1, ncol=n_spots)
  expr_data[i,] <- expr_data[i,] + i*matrix(rnorm(n_spots, 0, 1), nrow=1, ncol=n_spots)\%*\%Sigma
}
# Simulate (normalized) expression data with spatial autocorrelation for cell type 2
Sigma <- chol(K)\%*\%diag(cell_type_props[,'Cell_type_2'])
for(i in (n_genes/2+1):n_genes){
  expr_data[i,] <- matrix(rnorm(n_spots, 0, 1), nrow=1, ncol=n_spots)
  expr_data[i,] <- expr_data[i,] + matrix(rnorm(n_spots, 0, 1), nrow=1, ncol=n_spots)\%*\%Sigma
}

# Test cell-type-1 specific SVG
cell_type_results <- spacelink_cell_type(normalized_counts = expr_data, 
                                         spatial_coords = coords,
                                         cell_type_proportions = cell_type_props,
                                         focal_cell_type = "Cell_type_1")
print(cell_type_results[, c("pval", "ESV")])

}
